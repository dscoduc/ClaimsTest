<?xml version="1.0"?>
<configuration>

  <!-- Required for ADFS -->
  <configSections>
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
  </configSections>

  <system.web>
    <customErrors mode="Off" />
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />

    <!-- Required for ADFS -->
    <authentication mode="None" />
    <authorization>
      <deny users="?" />
    </authorization>
  </system.web>

  <system.webServer>
    <!-- Required for ADFS -->
    <modules>
      <add name="WSFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
      <add name="SessionAuthenticationModule" type="System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" preCondition="managedHandler" />
    </modules>
  </system.webServer>

  <!--
      Some good information about how to configure the web.config can be found in the following blog post:
        http://chris.59north.com/post/Configuring-an-ASPNET-site-to-use-WS-Federation 
  -->
  <system.identityModel>
    <identityConfiguration>
      <audienceUris>
        <add value="https://claimstest.dscoland.local/" />
      </audienceUris>

      <securityTokenHandlers>
        <add type="System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <remove type="System.IdentityModel.Tokens.SessionSecurityTokenHandler, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      </securityTokenHandlers>

      <!-- set certificateValidationMode = "None" to avoid check errors -->
      <certificateValidation certificateValidationMode="None"
                             revocationMode="Online"
                             trustedStoreLocation="LocalMachine" />

      <issuerNameRegistry type="System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <trustedIssuers>
          <!--
            The thumbprint is the Token-Signing certificate on the ADFS server.  Use the following PowerShell command 
            on the ADFS server to locate the Token-Signing certificate thumbprint:
            
                Get-ADFSCertificate | Where-Object {$_.CertificateType -eq "Token-Signing"}
                
            If you get an error indicating a problem with the IssuerNameRegistry then double check the
            thumbprint is correct (http://nzpcmad.blogspot.com/2013/04/adfs-id4175-issuer-of-security-token.html)

            The name value can be a friendly name for the certificate such as the name of the ADFS server
          -->
          <add thumbprint="47F3E012F445E027C9228C1B2915BA39F2425147" name="DC.dscoland.local" />
        </trustedIssuers>
      </issuerNameRegistry>
    </identityConfiguration>
  </system.identityModel>

  <system.identityModel.services>
    <federationConfiguration>
      <!-- optionally set the cookieHandler name to a custom value for your environment -->
      <cookieHandler requireSsl="false" name="DscoLandAuth" />

      <wsFederation issuer="https://adfs.dscoland.local/adfs/ls/"
                    realm="https://claimstest.dscoland.local"
                    reply="https://claimstest.dscoland.local"
                    passiveRedirectEnabled="true"
                    requireHttps="false" />

      <serviceCertificate>
        <!--
            This certificate reference is the encryption certificate that the STS will use to
            encrypt the auth token.  The web site will decrypt the auth token using the private
            key of this certificate - be sure to delegate read access of this certificate to
            the AppPool service account of the Website (ex. "IIS AppPool\ClaimsTest")
            
            Use CertUtil to get the Thumbprint and not Certlm.msc (hidden characters in GUI):
              certutil -store my
              
            Look for value starting with CertHash:
              Ex. Cert Hash(sha1): b6 c2 8f 51 2e 39 f2 34 d8 da 86 28 9b 1d 29 40 35 b3 32 a5
        -->
        <certificateReference x509FindType="FindByThumbprint"
                              findValue="b6c28f512e39f234d8da86289b1d294035b332a5"
                              storeLocation="LocalMachine"
                              storeName="My" />
      </serviceCertificate>
    </federationConfiguration>
  </system.identityModel.services>
</configuration>
